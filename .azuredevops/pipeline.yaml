---
trigger:
  batch: true
  branches:
    include:
      - main
      - feature/*

pr:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  System.Debug: true

stages:
  - stage: CI
    jobs:
      - template: templates/ci.yaml

  - stage: Private
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    jobs:
      - template: templates/publish.yaml
        parameters:
          publisherId: bonddim
          extensionId: argocd-installer
          extensionTag: -dev
          extensionName: Argo CD CLI Installer (DEV)
          extensionVisibility: private
          taskNameSuffix: Dev

      - job: wait
        displayName: "Wait for the extension"
        dependsOn: publish
        timeoutInMinutes: 60
        pool: server
        variables:
          version: $[ dependencies.publish.outputs['QueryVersion.Extension.Version'] ]
        steps:
          - task: InvokeRESTAPI@1
            displayName: "Wait for the extension version to be available"
            retryCountOnTaskFailure: 3
            inputs:
              connectionType: "connectedServiceName"
              serviceConnection: "https://dev.azure.com"
              method: "GET"
              urlSuffix: "/bonddim/_apis/distributedtask/tasks"
              waitForCompletion: "false"
              successCriteria: eq(jsonpath('.value[?(@.name==''ArgoCDInstallerDev'')].contributionVersion')[0], variables['version'])
              headers: |
                {
                  "Authorization": "Bearer $(System.AccessToken)"
                }

  - stage: Public
    # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - template: templates/publish.yaml
        parameters:
          publisherId: bonddim
          extensionId: argocd-installer
          extensionName: Argo CD CLI Installer
          extensionVisibility: public
